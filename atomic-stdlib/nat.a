combinators = #IMPORT "atomic-stdlib/combinators.a"
boolean = #IMPORT "atomic-stdlib/boolean.a"
use everything from boolean
use const,id from combinators

zero f x = x

suc n f x = f (n f x)

add m n f x = m f (n f x)
multiply m n f x = m (n f) x
exp m n = n m
pred n f x = n (\g h.h (g f)) (\u.x) (\u.u)
minus m n = (n pred) m

iszero n = n (\x.false) true

repeat n x f = n (位t.t x) f
lastOf n = n true id id

floor m frac f x = repeat m x (frac f (lastOf m))
frac n m f = n (m (位t nt v.t (位a.nt a v)) id (位a b.b (f a)))

div n m = floor m (frac n m)

divide = div


dividePrecursor c n m f x = (\d.iszero d x (f (c d m f x))) (minus n m)
-- divide n = y dividePrecursor (suc n)

lessthanorequal m n = iszero (minus m n)


z f = (\u.f(\z.u u z)) (\u.f(\z.u u z))
rem = z (\f n d.(lessthanorequal d n)(\x.f(minus n d) d x) n)

equal m n = and (lessthanorequal m n) (lessthanorequal n m)

reveal {
    zero,
    rem,
    suc,
    add,
    multiply,
    exp,
    pred,
    minus,
    iszero,
    lessthanorequal,
    equal,
    divide
    }